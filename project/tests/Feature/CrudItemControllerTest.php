<?php

namespace Tests\Feature;

use App\Models\Item;
use App\Repositories\UserRepository;
use Illuminate\Contracts\Auth\Authenticatable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;
use Tests\TestCase;

class CrudItemControllerTest extends TestCase
{
    protected Authenticatable|Model $user;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = (new UserRepository())->getById(1);
    }

    public function testCreateRouteWeb() {
        $this->authorize();
        $response = $this->get('create');
        $response->assertStatus(200);
    }
    public function testShowRouteWeb() {
        $this->authorize();
        $response = $this->get($this->getUri('show'));
        $response->assertStatus(200);
    }
    public function testStoreWebRedirect() {
        $this->authorize();
        $response = $this->post('store', ['name'=>'test', 'key'=>'123']);
        $response->assertRedirect('/home');
    }
    public function testUpdateWebRedirect() {
        $this->authorize();
        $response = $this->put($this->getUri('update'), ['name'=>'update test', 'key'=>'123']);
        $response->assertRedirect('/home');
    }

    public function testDeleteWebRedirect() {
        $this->authorize();
        $response = $this->delete($this->getUri('delete'));
        $response->assertRedirect('/home');
    }

    private function authorize() {
        Auth::login($this->user);
    }
    private function getUri(string $uri): string {
        return $uri.'/'.Item::query()->orderByDesc('id')->first()->id;
    }
}
